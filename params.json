{"name":"UAParser","tagline":"","body":"# UAParser [![Build Status](https://secure.travis-ci.org/yzalis/UAParser.png)](http://travis-ci.org/yzalis/UAParser)\r\n\r\n**UAParser** is a library which helps you to parse user agents and detect browser, operating system, device and more.\r\n\r\n## Basic Usage\r\n```php\r\n<?php\r\n\r\n// create a new UAParser instance\r\n$uaParser = new \\UAParser\\UAParser();\r\n\r\n// parse a user agent string an get the result\r\n$result =  $uaParser->parse('Mozilla/5.0 (Windows NT 6.1; WOW64; rv:23.0) Gecko/20130406 Firefox/23.0.1');\r\n```\r\n\r\n## Results\r\n\r\n### Global Result API\r\n* `$result->getBrowser()` will return a `UAParser\\Result\\BrowserResult` object\r\n* `$result->getOperatingSystem()` will return a `UAParser\\Result\\OperatingSystemResult` object\r\n* `$result->getDevice()` will return a `UAParser\\Result\\DeviceResult` object\r\n* `$result->getRenderingEngine()` will return a `UAParser\\Result\\RenderingEngineResult` object\r\n* `$result->getEmailClient()` will return a `UAParser\\Result\\EmailClientResult` object\r\n\r\n### Browser\r\n* `$result->getBrowser()->getFamily()` will return a string like `Firefox`\r\n* `$result->getBrowser()->getMajor()` will return an integer like `23`\r\n* `$result->getBrowser()->getMinor()` will return an integer like `0`\r\n* `$result->getBrowser()->getPatch()` will return an integer like `1`\r\n\r\n### Operating System\r\n* `$result->getOperatingSystem()->getFamily()` will return a string like `Mac OS`\r\n* `$result->getOperatingSystem()->getMajor()` will return a string like `10`\r\n* `$result->getOperatingSystem()->getMinor()` will return a string like `8`\r\n* `$result->getOperatingSystem()->getPatch()` will return a string like `4`\r\n\r\n### Device\r\n* `$result->getDevice()->getConstructor()` will return a string like `Apple`\r\n* `$result->getDevice()->getModel()` will return a string like `iPhone`\r\n* `$result->getDevice()->getType()` will return a string like `mobile`\r\n* `$result->getDevice()->isMobile()` will return a boolean like `true`\r\n* `$result->getDevice()->isTablet()` will return a boolean like `false`\r\n* `$result->getDevice()->isDesktop()` will return a boolean like `false`\r\n* `$result->getDevice()->is('mobile')` will return a boolean like `false`\r\n* `$result->getDevice()->is('tablet')` will return a boolean like `false`\r\n* `$result->getDevice()->is('desktop')` will return a boolean like `false`\r\n\r\n### EmailClient\r\n* `$result->getEmailClient()->getFamily()` will return a string like `Thunderbird`\r\n* `$result->getEmailClient()->getMajor()` will return a string like `3`\r\n* `$result->getEmailClient()->getMinor()` will return a string like `1`\r\n* `$result->getEmailClient()->getPatch()` will return a string like `2`\r\n* `$result->getEmailClient()->getType()` will return a string like `desktop`\r\n* `$result->getEmailClient()->isDesktop()` will return a boolean like `true`\r\n* `$result->getEmailClient()->isWebmail()` will return a boolean like `false`\r\n* `$result->getEmailClient()->is('desktop')` will return a boolean like `true`\r\n* `$result->getEmailClient()->is('webmail')` will return a boolean like `false`\r\n\r\n### Rendering Engine\r\n* `$result->getRenderingEngine()->getFamily()` will return a string like `Trident`\r\n* `$result->getRenderingEngine()->getVersion()` will return a string like `4.0`\r\n\r\n## Unit Tests\r\n\r\nTo run unit tests, you'll need cURL and a set of dependencies you can install using Composer:\r\n```\r\ncurl -sS https://getcomposer.org/installer | php\r\nphp composer.phar install\r\n```\r\n\r\nOnce installed, just launch the following command:\r\n```\r\nphpunit\r\n```\r\n\r\nYou're done.\r\n\r\n## Credits\r\n\r\n* Benjamin Laugueux <benjamin@yzalis.com>\r\n* [All contributors](https://github.com/yzalis/UAParser/contributors)\r\n\r\nThanks for providing a huge amount of data to run tests:\r\n* [http://user-agent-string.info](http://user-agent-string.info)\r\n* [http://www.useragentstring.com](http://www.useragentstring.com)\r\n\r\n## License\r\n\r\nUAParser is released under the MIT License. See the bundled LICENSE file for details.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}